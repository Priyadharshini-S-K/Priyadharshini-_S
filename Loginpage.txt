import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class NextPage extends JFrame
{

    private JTextField usernameField;
    private JTextField emailField;
    private JPasswordField passwordField;
    private BufferedImage backgroundImage;

    public NextPage() {
        setTitle("Home Water Supply System");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setExtendedState(JFrame.MAXIMIZED_BOTH);

        // Load the background image
        try {
            backgroundImage = ImageIO.read(new File("C:\\Users\\harin\\OneDrive\\Pictures\\Saved Pictures\\login.jpg")); // Replace with the path to your image
        } catch (IOException e)
        {
            e.printStackTrace();
        }

        CustomPanel mainPanel = new CustomPanel();
        mainPanel.setLayout(null);

        JLabel mainLabel = new JLabel("Welcome to the pet shop buying System");
        mainLabel.setBounds(500, 5, 900, 200);
        mainLabel.setFont(new Font("Times New Roman", Font.BOLD, 30));
        mainLabel.setForeground(Color.blue);
        mainPanel.add(mainLabel);

        JLabel usernameLabel = new JLabel(" USERNAME :");
        usernameLabel.setBounds(500, 180, 300, 50);
        usernameLabel.setFont(new Font("Times New Roman", Font.BOLD, 25));
        usernameLabel.setForeground(Color.red);
        mainPanel.add(usernameLabel);

        usernameField = new JTextField();
        usernameField.setFont(new Font("Times New Roman", Font.BOLD, 20));
        usernameField.setBounds(800, 180, 200, 50);
        mainPanel.add(usernameField);

        JLabel emailLabel = new JLabel(" EMAIL :");
        emailLabel.setBounds(500, 280, 300, 50);
        emailLabel.setFont(new Font("Times New Roman", Font.BOLD, 25));
        emailLabel.setForeground(Color.red);
        mainPanel.add(emailLabel);

        emailField = new JTextField();
        emailField.setFont(new Font("Times New Roman", Font.BOLD, 20));
        emailField.setBounds(800, 280, 200, 50);
        mainPanel.add(emailField);

        JLabel passwordLabel = new JLabel(" PASSWORD :");
        passwordLabel.setBounds(500, 380, 300, 50);
        passwordLabel.setFont(new Font("Times New Roman", Font.BOLD, 25));
        passwordLabel.setForeground(Color.red);
        mainPanel.add(passwordLabel);

        passwordField = new JPasswordField();
        passwordField.setFont(new Font("Times New Roman", Font.BOLD, 20));
        passwordField.setBounds(800, 380, 200, 50);
        mainPanel.add(passwordField);

        JButton loginButton = new JButton("LOGIN");
        loginButton.setBounds(650, 480, 200, 55);
        loginButton.setFont(new Font("Times New Roman", Font.BOLD, 30));
        loginButton.setForeground(Color.red);
        mainPanel.add(loginButton);

        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String username = usernameField.getText();
                String email = emailField.getText();
                String password = new String(passwordField.getPassword());

                if (username.isEmpty() || email.isEmpty() || password.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please enter all the required fields");
                    return;
                }

                try
                {
                    Connection conn = getConnection();
                    String sql = "SELECT * FROM users WHERE username = ? AND email = ? AND password = ?";
                    PreparedStatement pstmt = conn.prepareStatement(sql);
                    pstmt.setString(1, username);
                    pstmt.setString(2, email);
                    pstmt.setString(3, password);
                    ResultSet rs = pstmt.executeQuery();

                    if (rs.next())
                    {
                        JOptionPane.showMessageDialog(null, "Login successful");

                        // Open the main application window (MainPage)
                        SwingUtilities.invokeLater(new Runnable()
                        {
                            public void run()
                            {
                                CustomerPage customerPage = new CustomerPage(username); // Pass username to MainPage
                               customerPage.setVisible(true);
                            }
                        });

                        // Dispose the current login window
                        dispose();
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "Invalid username, email, or password");
                    }

                    conn.close();
                } catch (SQLException ex)
                {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Login failed due to a database error");
                }
            }
        });

        setContentPane(mainPanel);
        setVisible(true);
    }

    private static Connection getConnection() throws SQLException
    {
        String url = "jdbc:mysql://localhost:3306/pet";
        String user = "root";
        String password = ""; // Make sure the password is correct or set to your database password
        return DriverManager.getConnection(url, user, password);
    }

    public static void main(String[] args)
    {
        SwingUtilities.invokeLater(new Runnable()
        {
            public void run()
            {
                new NextPage();
            }
        });
    }


    // Custom JPanel class to draw the background image
    private class CustomPanel extends JPanel
    {
        @Override
        protected void paintComponent(Graphics g)
        {
            super.paintComponent(g);
            if (backgroundImage != null)
            {
                g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), this);
            }
        }
    }
}
