import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class SignupFramee {

    public static void main(String[] args) {
        JFrame f = new JFrame("PET SHOP MANAGEMENT SYSTEM");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setExtendedState(JFrame.MAXIMIZED_BOTH);

        // Load the background image
        BufferedImage backgroundImage = null;
        try {
            backgroundImage = ImageIO.read(new File("C:\\Users\\admin\\Pictures\\Saved Pictures\\pb.jpg")); // Replace with your image path
        } catch (IOException e) {
            e.printStackTrace();
        }

        CustomPanel mainPanel = new CustomPanel(backgroundImage);
        mainPanel.setLayout(null);

        JLabel l = new JLabel("WELCOME TO YAS PET SHOP");
        l.setBounds(500, 5, 900, 200);
        l.setFont(new Font("Times New Roman", Font.BOLD, 30));
        l.setForeground(Color.blue);
        mainPanel.add(l);

        JLabel l1 = new JLabel("SIGNUP");
        l1.setBounds(640, 50, 900, 200);
        l1.setFont(new Font("Times New Roman", Font.BOLD, 30));
        l1.setForeground(Color.RED);
        mainPanel.add(l1);

        JLabel t = new JLabel("USERNAME:");
        t.setBounds(500, 180, 300, 50);
        t.setFont(new Font("Times New Roman", Font.BOLD, 25));
        t.setForeground(Color.red);
        mainPanel.add(t);

        JTextField ps = new JTextField();
        ps.setFont(new Font("Times New Roman", Font.BOLD, 20));
        ps.setBounds(800, 180, 200, 50);
        mainPanel.add(ps);

        JLabel t2 = new JLabel("EMAIL:");
        t2.setBounds(500, 280, 300, 50);
        t2.setFont(new Font("Times New Roman", Font.BOLD, 25));
        t2.setForeground(Color.red);
        mainPanel.add(t2);

        JTextField ps2 = new JTextField();
        ps2.setFont(new Font("Times New Roman", Font.BOLD, 20));
        ps2.setBounds(800, 280, 200, 50);
        mainPanel.add(ps2);

        JLabel pw = new JLabel("PASSWORD:");
        pw.setBounds(500, 380, 300, 50);
        pw.setFont(new Font("Times New Roman", Font.BOLD, 25));
        pw.setForeground(Color.red);
        mainPanel.add(pw);

        JPasswordField pl = new JPasswordField();
        pl.setFont(new Font("Times New Roman", Font.BOLD, 20));
        pl.setBounds(800, 380, 200, 50);
        mainPanel.add(pl);

        JLabel pw1 = new JLabel("RE-ENTER PASSWORD:");
        pw1.setBounds(500, 480, 300, 50);
        pw1.setFont(new Font("Times New Roman", Font.BOLD, 25));
        pw1.setForeground(Color.red);
        mainPanel.add(pw1);

        JPasswordField pl1 = new JPasswordField();
        pl1.setFont(new Font("Times New Roman", Font.BOLD, 20));
        pl1.setBounds(800, 480, 200, 50);
        mainPanel.add(pl1);

        JButton b = new JButton("SIGNUP");
        b.setBounds(650, 600, 200, 55);
        b.setFont(new Font("Times New Roman", Font.BOLD, 30));
        b.setForeground(Color.red);
        mainPanel.add(b);

        b.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String username = ps.getText();
                String email = ps2.getText();
                String password = new String(pl.getPassword());
                String confirmPassword = new String(pl1.getPassword());

                if (username.isEmpty() || email.isEmpty() || password.isEmpty() || confirmPassword.isEmpty()) {
                    JOptionPane.showMessageDialog(f, "Please fill in all the fields");
                    return;
                }

                if (!password.equals(confirmPassword)) {
                    JOptionPane.showMessageDialog(f, "Passwords do not match");
                    return;
                }

                try {
                    Connection conn = getConnection();
                    String sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                    PreparedStatement pstmt = conn.prepareStatement(sql);
                    pstmt.setString(1, username);
                    pstmt.setString(2, email);
                    pstmt.setString(3, password);
                    pstmt.executeUpdate();
                    JOptionPane.showMessageDialog(f, "Signup successful");
                    conn.close();
                    f.dispose(); // Close the signup frame
                    new NextPage(); // Open the next page (make sure this class is defined)
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(f, "Signup failed");
                }
            }
        });

        f.setContentPane(mainPanel);
        f.setVisible(true);
    }

    private static Connection getConnection() throws SQLException {
        String url = "jdbc:mysql://localhost:3306/pet";
        String user = "root";
        String password = "";
        return DriverManager.getConnection(url, user, password);
    }

    // Custom JPanel class to draw the background image
    private static class CustomPanel extends JPanel {
        private BufferedImage backgroundImage;

        public CustomPanel(BufferedImage backgroundImage) {
            this.backgroundImage = backgroundImage;
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            if (backgroundImage != null) {
                g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), this);
            }
        }
    }
}
